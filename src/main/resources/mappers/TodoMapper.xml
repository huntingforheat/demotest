<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper의 namespace는 설정을 적용할 인터페이스를 지정함 -->
<mapper namespace="com.zercok.demotest.mapper.TodoMapper">

    <!-- resultType에 'string'은 별칭으로 자주 사용하는 타입을 지정한 것
        정식으로 작성시 "java.lang.String"으로 작성 해야 함.-->
    <select id="getTime" resultType="string">
        select now()
    </select>

    <insert id="insert">
        insert into tbl_todo(title, dueDate, writer) values ( #{title}, #{dueDate}, #{writer})
    </insert>

    <select id="selectAll" resultType="com.zercok.demotest.domain.TodoVO">    <!-- todovo를 대상으로 삼음 -->
        select * from tbl_todo order by tno desc
    </select>

    <select id="selectOne" resultType="com.zercok.demotest.domain.TodoVO">
        select * from tbl_todo where tno = #{tno}
    </select>

    <delete id="delete">
        delete from tbl_todo where tno = #{tno}
    </delete>

    <update id="update">
        update tbl_todo set title = #{title}, dueDate = #{dueDate}, finished= #{finished} where tno = #{tno}
    </update>

    <select id="selectList" resultType="com.zercok.demotest.domain.TodoVO">
        select * from tbl_todo
        <include refid="search"></include>
        order by tno desc limit #{skip}, #{size}     <!-- mybatis에서 #{value}하면 get,set을 가져옴 -->
    </select>

    <select id="getCount" resultType="int">
        select count(tno) from tbl_todo
        <include refid="search"></include>
    </select>

    <sql id="search">
        <where>    <!-- where 태그 조건에 맞으면 if, foreach문 실행 -->
            <if test="types != null and types.length > 0">
                <foreach collection="types" item="type" open="(" close=")" separator=" OR ">
                    <if test="type == 't'.toString() ">    <!-- title의 조건이 맞는지 -->
                        title like concat('%', #{keyword}, '%')
                    </if>
                    <if test="type == 'w'.toString()">     <!-- writer의 조건이 맞는지 -->
                        writer like concat('%', #{keyword}, '%')
                    </if>
                </foreach>
            </if>
            <if test="finished">
                <trim prefix="and">    <!-- finished가 true일떄만 출력 -->
                    finished = 1
                </trim>
            </if>
            <if test="from != null and to != null">    <!-- from, to(dueDate)가 null이면 출력안함 -->
                <trim prefix="and">
                    dueDate between #{from} and #{to}
                </trim>
            </if>
        </where>
    </sql>

</mapper>